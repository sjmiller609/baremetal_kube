- hosts: routers
  gather_facts: false
  roles:
    - edgeos
  tags:
    - reset

- hosts: all
  gather_facts: no
  tasks:
    # used to configure PXE booting
    - name: Fetch the MAC without a requirement on Python
      raw: ifconfig | grep -A2 192.168.2 | tail -n1 | awk '{ print $2 }'
      changed_when: false
      ignore_errors: yes
      register: mac
    - name: Save MAC address in variable
      set_fact:
        mac: "{{ mac.stdout | trim }}"
  tags:
    - reset

- hosts: localhost
  become: yes
  roles:
    - pxe-server
  tags:
    - reset

- hosts: container_linux
  gather_facts: no
  tags:
    - reset
  tasks:
    - name: Force binaries directory for Container Linux by CoreOS
      set_fact:
        bin_dir: "/opt/bin"
    - name: Install Python if necessary
      raw: |
        #!/bin/bash
        set -e
        BINDIR="/opt/bin"
        mkdir -p $BINDIR
        cd $BINDIR
        if [[ -e $BINDIR/.bootstrapped ]]; then
          exit 0
        fi
        PYPY_VERSION=7.0.0
        wget -O - https://bitbucket.org/squeaky/portable-pypy/downloads/pypy3.5-$PYPY_VERSION-linux_x86_64-portable.tar.bz2 | tar -xjf -
        mv -n pypy3.5-$PYPY_VERSION-linux_x86_64-portable pypy3
        ln -s ./pypy3/bin/pypy3 python
        $BINDIR/python --version
        touch $BINDIR/.bootstrapped
    - name: PXE boot into fresh Container Linux
      reboot: {}
    - name: Install Python if necessary
      raw: |
        #!/bin/bash
        set -e
        BINDIR="/opt/bin"
        mkdir -p $BINDIR
        cd $BINDIR
        if [[ -e $BINDIR/.bootstrapped ]]; then
          exit 0
        fi
        PYPY_VERSION=7.0.0
        wget -O - https://bitbucket.org/squeaky/portable-pypy/downloads/pypy3.5-$PYPY_VERSION-linux_x86_64-portable.tar.bz2 | tar -xjf -
        mv -n pypy3.5-$PYPY_VERSION-linux_x86_64-portable pypy3
        ln -s ./pypy3/bin/pypy3 python
        $BINDIR/python --version
        touch $BINDIR/.bootstrapped
    # https://github.com/rancher/k3s/issues/163#issuecomment-469882207
    - name: Set hostname
      hostname:
        name: "{{ inventory_hostname }}"
    - name: Add hostname to /etc/hosts
      lineinfile:
        dest: /etc/hosts
        regexp: '^127\.0\.0\.1[ \t]+localhost'
        line: '127.0.0.1 localhost {{ inventory_hostname }}'
        state: present

- name: 'Deploy K3s: bootstrap first master'
  hosts: container_linux[0]
  gather_facts: no
  tasks:
    - name: Deploy first master
      raw: |
        if [ ! "$(docker ps -a | grep k3s-server)" ]; then \
          docker run \
          --env K3S_TOKEN=testsecret \
          --rm \
          --tmpfs /run \
          --tmpfs /var/run \
          --network host \
          -d \
          --privileged \
          --name k3s-server \
          rancher/k3s:v1.0.0 \
          server
        fi
    - name: Wait for cluster to initialize
      raw: |
        sleep 60
    - name: Get the kubeconfig
      raw: |
        docker exec -it k3s-server cat /etc/rancher/k3s/k3s.yaml
      register: kubeconfig
    - name: Write the kubeconfig to the localhost
      become: yes
      copy:
        content: "{{ kubeconfig.stdout }}"
        dest: /tmp/kubeconfig
      delegate_to: localhost


- name: 'Deploy K3s: join workers'
  hosts: container_linux[1:]
  gather_facts: no
  tasks:
   - name: Join worker nodes
     raw: |
       if [ ! "$(docker ps -a | grep k3s-agent)" ]; then \
         docker run \
         --env K3S_TOKEN=testsecret \
         --env K3S_URL=https://{{ hostvars[groups['container_linux'][0]]['ansible_host'] }}:6443 \
         --tmpfs /run \
         --tmpfs /var/run \
         --network host \
         -d \
         --privileged \
         --name k3s-agent \
         rancher/k3s:v1.0.0 \
         agent
       fi

# - name: Include Kubespray tasks
#   tags:
#     - reset
#   import_playbook: kubespray/cluster.yml

# - name: Install MetalLB
#   import_playbook: kubespray/contrib/metallb/metallb.yml
