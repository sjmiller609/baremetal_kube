# Configure an EdgeOS router connected on one side to
# the internet and on the other to a private network.
# all Kubernetes targets should be in the network.
- hosts: routers
  gather_facts: false
  roles:
    - edgeos

# Gather MAC addresses of targets collected by inventory
# in order to configure PXE booting of targets.
- hosts: all
  gather_facts: no
  tasks:
    # used to configure PXE booting
    - name: Fetch the MAC without a requirement on Python
      raw: ifconfig | grep -A2 192.168.2 | tail -n1 | awk '{ print $2 }'
      changed_when: false
      ignore_errors: yes
      register: mac
    - name: Save MAC address in variable
      set_fact:
        mac: "{{ mac.stdout | trim }}"

# Set up a PXE server
# so that by restarting computers in the network,
# we can reinstall operating systems.
- hosts: localhost
  become: yes
  roles:
    - pxe-server

# Targets should have their NIC first in their
# boot order.
- hosts: container_linux
  gather_facts: no
  roles:
    - container-linux-reboot

# Deploy the first master
- name: 'Deploy K3s: bootstrap first master'
  hosts: container_linux[0]
  gather_facts: no
  tasks:
    - name: Deploy master
      docker_container:
        name: k3s-server
        env:
          K3S_TOKEN: "{{ lookup('password', '~/.kube/k3s_token length=64 chars=digits,ascii_letters') }}"
        mounts:
          - target: /run
            type: tmpfs
          - target: /var/run
            type: tmpfs
        privileged: yes
        image: rancher/k3s:v1.0.0
        network_mode: host
        command: server
    - name: Get the kubeconfig
      command: |
        docker exec -it k3s-server cat /etc/rancher/k3s/k3s.yaml
      retries: 15
      delay: 2
      changed_when: no
      register: kubeconfig
      until: kubeconfig.rc == 0
    - name: Write the kubeconfig to the localhost
      become: yes
      copy:
        content: "{{ kubeconfig.stdout }}"
        dest: /tmp/kubeconfig
      delegate_to: localhost
    - name: Overwrite the IP address in the Kubeconfig file
      become: yes
      lineinfile:
        dest: /tmp/kubeconfig
        regexp: '^\s*server.*'
        line: "    server: https://{{ hostvars[groups['container_linux'][0]]['ansible_host'] }}:6443"
        state: present
      delegate_to: localhost

# Join agents
- name: 'Deploy K3s: join agents'
  hosts: container_linux[1:]
  gather_facts: no
  tasks:
    - name: Join k3s agents
      docker_container:
        name: k3s-server
        env:
          K3S_TOKEN: "{{ lookup('password', '~/.kube/k3s_token length=64 chars=digits,ascii_letters') }}"
          K3S_URL: "https://{{ hostvars[groups['container_linux'][0]]['ansible_host'] }}:6443"
        mounts:
          - target: /run
            type: tmpfs
          - target: /var/run
            type: tmpfs
        privileged: yes
        image: rancher/k3s:v1.0.0
        network_mode: host
        command: agent
