---
# tasks file for pxe-server
#
- name: System details
  debug: msg="{{ item }}"
  with_items:
  - "{{ ansible_distribution }}"
  - "{{ ansible_distribution_version }}"
  - "{{ ansible_distribution_major_version }}"

- name: Check distribution is Ubuntu
  assert:
    that: ansible_distribution == "Ubuntu"

- name: Check distribution major version is 18
  assert:
    that: ansible_distribution_major_version == "18"

- name: Install packages
  apt:
    update_cache: yes
    name:
      - apache2
      - isc-dhcp-server
      - tftpd-hpa
      - syslinux
      - pxelinux
      - nfs-kernel-server
      - initramfs-tools
    state: present

- name: Configure DHCP server
  template:
    src: dhcpd.conf.j2
    dest: /etc/dhcp/dhcpd.conf
    owner: root
    group: root
    mode: '0644'

- name: Configure FTP server
  copy:
    src: tftpd-hpa
    dest: /etc/default/tftpd-hp
    owner: root
    group: root
    mode: '0644'

- name: Create root directory structure for FTP server
  file:
    path: "/var/lib/tftpboot/{{ item }}"
    state: directory
    owner: root
    group: root
    mode: '0755'
  with_items:
    - pxelinux.cfg
    - boot

# better than 'copy' directive because copy would
# not work when not using localhost target.
# also, this is much faster
- name: Add pxelinux.0 and isolinux to FTP directory
  changed_when: true
  shell: |
    set -xe
    rm /var/lib/tftpboot/pxelinux.0 || true
    rm -rf /var/lib/tftpboot/boot/isolinux || true
    cp /usr/lib/PXELINUX/pxelinux.0 /var/lib/tftpboot
    cp -r /usr/lib/syslinux/modules/bios /var/lib/tftpboot/boot/isolinux
    chmod -R +r /var/lib/tftpboot

- name: Set up pxelinux.cfg in FTP directory
  template:
    src: pxelinux.cfg.j2
    dest: /var/lib/tftpboot/pxelinux.cfg/default
    owner: root
    group: root
    mode: "0644"

- name: Look up SSH public key
  set_fact:
    ssh_pub_key: "{{ lookup('file', '~/.ssh/id_rsa.pub') }}"

- name: Create container linux configuration file locally
  delegate_to: localhost
  template:
    src: container_linux_config.yaml.j2
    dest: /tmp/container_linux_config.yaml

- name: Install GPG2 locally
  delegate_to: localhost
  package:
    name:
      - gnupg2
    state: present

- name: Install Container Linux configuration transpiler locally and transpile configuration to Ignition
  changed_when: true
  delegate_to: localhost
  shell: |
    set -xe
    CT_VER=v0.6.1
    ARCH=x86_64
    OS=unknown-linux-gnu # Linux
    DOWNLOAD_URL=https://github.com/coreos/container-linux-config-transpiler/releases/download
    # Remove previous downloads
    rm -f /tmp/ct-${CT_VER}-${ARCH}-${OS} /tmp/ct-${CT_VER}-${ARCH}-${OS}.asc /tmp/coreos-app-signing-pubkey.gpg
    # Download Config Transpiler binary
    curl -L ${DOWNLOAD_URL}/${CT_VER}/ct-${CT_VER}-${ARCH}-${OS} -o /tmp/ct-${CT_VER}-${ARCH}-${OS}
    chmod u+x /tmp/ct-${CT_VER}-${ARCH}-${OS}
    # Download and import CoreOS application signing GPG key
    curl https://coreos.com/dist/pubkeys/app-signing-pubkey.gpg -o /tmp/coreos-app-signing-pubkey.gpg
    gpg2 --import --keyid-format LONG /tmp/coreos-app-signing-pubkey.gpg
    # Download and import CoreOS application signing GPG key if it has not already been imported
    curl -L ${DOWNLOAD_URL}/${CT_VER}/ct-${CT_VER}-${ARCH}-${OS}.asc -o /tmp/ct-${CT_VER}-${ARCH}-${OS}.asc
    gpg2 --verify /tmp/ct-${CT_VER}-${ARCH}-${OS}.asc /tmp/ct-${CT_VER}-${ARCH}-${OS}
    /tmp/ct-${CT_VER}-${ARCH}-${OS} --in-file /tmp/container_linux_config.yaml > /tmp/ignition_config.json

- name: Copy Ignition config to FTP directory
  copy:
    src: /tmp/ignition_config.json
    dest: /var/lib/tftpboot/pxe-config.ign
    owner: root
    group: root
    mode: "0644"

- name: Copy Ignition config to HTTP directory
  copy:
    src: /tmp/ignition_config.json
    dest: /var/www/html/pxe-config.ign
    owner: root
    group: root
    mode: "0644"

- name: Download the latest stable CoreOS kernel and initrd to the FTP directory
  get_url:
    force: yes
    url: "{{ item }}"
    dest: /var/lib/tftpboot/
    mode: "0644"
  with_items:
  - "https://stable.release.core-os.net/amd64-usr/current/coreos_production_pxe.vmlinuz"
  - "https://stable.release.core-os.net/amd64-usr/current/coreos_production_pxe_image.cpio.gz"

- name: Change ownership of all files in the FTP directory to tftp user and group
  file:
    path: /var/lib/tftpboot
    state: directory
    recurse: yes
    owner: tftp
    group: tftp
    mode: "0744"

- name: Open firewall for FTP
  ufw:
    rule: allow
    port: tftp

- name: Open firewall for DHCP
  ufw:
    rule: allow
    port: '67'
    proto: udp

- name: Open firewall for HTTP
  ufw:
    rule: allow
    port: '80'
    proto: tcp

- name: Open firewall for SSH
  ufw:
    rule: allow
    port: '22'
    proto: tcp

- name: (Re)start services ufw, tftpd-hpa, and isc-dhcp-server
  service:
    name: "{{ item }}"
    state: restarted
    # ensure means start on boot
    enabled: yes
  with_items:
    # - ufw
    - tftpd-hpa
    - isc-dhcp-server
    - apache2
